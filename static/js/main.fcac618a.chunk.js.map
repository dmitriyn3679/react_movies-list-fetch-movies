{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","addMovie","useState","searchQuery","setSearchQuery","setMovie","loading","setLoading","loadingError","setLoadingError","loadMovie","a","query","fetch","then","res","json","catch","Response","Error","data","newMovie","Title","Plot","Poster","imdbID","onLoad","onSubmit","event","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","length","onClick","App","setMovies","some","currentMovies","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fcac618a.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { ChangeEvent, useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { getMovie } from '../../api';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (newMovie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [loading, setLoading] = useState(false);\n  const [loadingError, setLoadingError] = useState(false);\n\n  const loadMovie = async () => {\n    const data = await getMovie(searchQuery);\n\n    if ('Error' in data) {\n      setLoadingError(true);\n    } else {\n      const newMovie = {\n        title: data.Title,\n        description: data.Plot,\n        imgUrl: data.Poster !== 'N/A'\n          ? data.Poster\n          : 'https://via.placeholder.com/360x270.png?text=no%20preview',\n        imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n        imdbId: data.imdbID,\n      };\n\n      setMovie(newMovie);\n    }\n  };\n\n  const onLoad = async () => {\n    setLoading(true);\n    await loadMovie();\n    setLoading(false);\n  };\n\n  const inputHandler = (event: ChangeEvent<HTMLInputElement>) => {\n    setSearchQuery(event.target.value);\n    setLoadingError(false);\n  };\n\n  const onAdd = () => {\n    if (movie) {\n      addMovie(movie);\n    }\n\n    setMovie(null);\n    setSearchQuery('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\" onSubmit={event => event.preventDefault()}>\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={searchQuery}\n              onChange={inputHandler}\n            />\n          </div>\n          {(loadingError && searchQuery) && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button is-light',\n                { 'is-loading': loading },\n              )}\n              disabled={searchQuery.length === 0}\n              onClick={onLoad}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            {movie && (\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => onAdd()}\n              >\n                Add to the list\n              </button>\n            )}\n          </div>\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=7ff0acef';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addNewMovie = (newMovie: Movie) => {\n    const newMovieIsAdded = movies.some(\n      movie => movie.imdbId === newMovie.imdbId,\n    );\n\n    if (!newMovieIsAdded) {\n      setMovies(currentMovies => {\n        return [...currentMovies, newMovie];\n      });\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addNewMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}